version: '3'
services:
  reader:
    image: glebosotov/inno-tv-rabbitmq-reader:latest
    environment:
      HOST: server
      PORT: 5672
      LOGIN: ${LOGIN}
      PASSWORD: ${PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      PYTHONUNBUFFERED: 1
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M
  sender:
    image: glebosotov/inno-tv-rabbitmq-sender:latest
    environment:
      HOST: server
      PORT: 5672
      LOGIN: ${LOGIN}
      PASSWORD: ${PASSWORD}
      PYTHONUNBUFFERED: 1
    restart: unless-stopped
  server:
    image: rabbitmq:3.11-management
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${LOGIN}
      RABBITMQ_DEFAULT_PASS: ${PASSWORD}
  db:
    image: postgres:14.6
    restart: always
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./postgres-data:/var/lib/postgresql/data

    